#!/bin/bash/env bash

#
# Filename:         bashlib-files
# Description:      File type validation.
# Author(s):        Alex Portell <github.com/portellam>
# Maintainer(s):    Alex Portell <github.com/portellam>
#

# <summary> Libraries </summary>
# <code>
    source bashlib-lists
    source bashlib-vars
# </code>

# <summary> Validation </summary>
# <functions>
    function FileHasSetGroupId
    {
        [ -g "$1" ]
        return "$?"
    }

    function FileHasSetUserId
    {
        [ -u "$1" ]
        return "$?"
    }

    function FileHasStickyBitId
    {
        [ -k "$1" ]
        return "$?"
    }

    function IsFile
    {
        [ -a "$1" ] || [ -e "$1" ]
        return "$?"
    }

    function IsBlockFile
    {
        [ -b "$1" ]
        return "$?"
    }

    function IsCharacterFile
    {
        [ -c "$1" ]
        return "$?"
    }

    function IsFileExecutable
    {
        [ -x "$1" ]
        return "$?"
    }

    function IsFileModified
    {
        [ -N "$1" ]
        return "$?"
    }

    function IsFileFIFO
    {
        [ -p "$1" ]
        return "$?"
    }

    function IsFileNotEmpty
    {
        [ -s "$1" ]
        return "$?"
    }

    function IsFileOwnedByGroup
    {
        [ -G "$1" ]
        return "$?"
    }

    function IsFileOwnedByUser
    {
        [ -O "$1" ]
        return "$?"
    }

    function IsFileReadable
    {
        [ -r "$1" ]
        return "$?"
    }

    function IsFileSocket
    {
        [ -S "$1" ]
        return "$?"
    }

    function IsFileSymLink
    {
        [ -L "$1" ] || [ -h "$1" ]
        return "$?"
    }

    function IsFileWritable
    {
        [ -w "$1" ]
        return "$?"
    }

    function IsPathFile
    {
        [ -d "$1" ]
        return "$?"
    }

    function IsRegularFile
    {
        [ -f "$1" ]
        return "$?"
    }
# </functions>

# <summary> Comparisons </summary>
# <functions>
    function AreSame
    {
        [ "$1" -ef "$2" ]
        return "$?"
    }

    function IsNewer
    {
        [ "$1" -nt "$2" ]
        return "$?"
    }

    function IsOlder
    {
        [ "$1" -ot "$2" ]
        return "$?"
    }
# </functions>

# <summary> Input/output </summary>
# <functions>
    function CreatePath
    {
        IsPathFile "$1" || return 0
        touch "$1"
        return "$?"
    }

    function CreateFile
    {
        IsFile "$1" || return 0
        mkdir -p "$1"
        return "$?"
    }

    function DeletePath
    {
        IsPathFile "$1" || return "$?"
        rm -rf "$1"
        return "$?"
    }

    function DeleteFile
    {
        IsFile "$1" || return "$?"
        rm -f "$1"
        return "$?"
    }

    function ReadFile
    {
        IsEnum "$2" || return "$?"
        IsFile "$1" || return "$?"
        local -n REFERENCE="$2"
        REFERENCE=$( cat "$1" )
        return 0
    }

    function WriteFile
    {
        IsEnum "$2" || return "$?"
        IsFile "$1" || return "$?"
        local -n REFERENCE="$2"
        IFS=$'\n'
        echo -e "${REFERENCE[*]}"
        return "$?"
    }
# </functions>